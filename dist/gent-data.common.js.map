{"version":3,"file":"gent-data.common.js","sources":["../src/utils.js","../src/middleware/log.js","../src/source.js","../src/FlowGroup.js"],"sourcesContent":["// if condition is false, throw message \nexport function invariant(condition, message) {\n  if (condition) return;\n  throw new Error(message);\n}\n\n// log\nexport function log(...args) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.log(...args);\n  };\n}\n\n// catch error\nexport function catchError(fn) {\n  return function(...args) {\n    try {\n      return fn.bind(this)(...args);\n    } catch (e) {\n      console.log('uncaught exception:', e);\n      throw e;\n    }\n  }\n}","import { map } from 'rxjs/operators';\nimport { log } from '../utils';\n\nexport function logMiddleware(input, opts={}) {\n  let {groupName, flowName, middleware} = opts;\n  let typeMsg = { before: 'in', after: 'out' }[middleware];\n\n  // not use as a middleware\n  if (!middleware) return input;\n\n  return input.pipe(\n    map(value => {\n      let logData;\n      \n      try {\n        logData = JSON.parse(JSON.stringify(value));\n      } catch(e) {\n        logData = e.message;\n      }\n\n      log(`gent-data log ~ flow ${typeMsg} <${groupName}>.<${flowName}>:`, logData);\n\n      return value;\n    })\n  );\n}\n","import { Observable } from 'rxjs';\nimport { concatMap, mergeMap, switchMap } from 'rxjs/operators';\n\n// bind promise with observer\nexport function observePromise(promise, observer) {\n  promise.then(\n    (data) => {\n      observer.next(data);\n      observer.complete();\n    },\n    (error) => {\n      observer.error(error);\n      observer.complete();\n    }\n  );\n}\n\n// bind value with observer\nexport function observeValue(value, observer) {\n  observer.next(value);\n  observer.complete();\n}\n\n// convert source to observable\nexport function sourceToObservable(fn, res) {\n  return Observable.create((observer) => {\n    return fn(res, observer);\n  });\n}\n\n// concatMap source to flow\nexport function concatMapSource(source) {\n  return (input) => {\n    return input.pipe(\n      concatMap((data) => sourceToObservable(source, data))\n    );\n  };\n}\n\n// mergeMap source to flow\nexport function mergeMapSource(source) {\n  return (input) => {\n    return input.pipe(\n      mergeMap((data) => sourceToObservable(source, data))\n    );\n  };\n}\n\n// switchMap source to flow\nexport function switchMapSource(source) {\n  return (input) => {\n    return input.pipe(\n      switchMap((data) => sourceToObservable(source, data))\n    );\n  };\n}","import { invariant } from './utils';\nimport { \n  concatMapSource,\n  mergeMapSource,\n  switchMapSource\n} from './source';\n\nexport class FlowGroup {\n  constructor({\n    name = 'Anonymous',\n    beforeMiddlewares = [],\n    afterMiddlewares = []\n  } = {}) {\n    this._name = name;\n    this._beforeMiddlewares = beforeMiddlewares;\n    this._afterMiddlewares = afterMiddlewares;\n\n    // flows map\n    this._flows = {};\n  }\n\n  // add a flow to the group\n  // return a new flow\n  addFlow(fn, name=\"Anonymous\") {\n    invariant(\n      typeof this._flows[name] === 'undefined',\n      `gent-data error ~ flow<${name}> can't be duplicated in this group<${this._name}>!`\n    );\n\n    // generate flow\n    this._flows[name] = fn;\n\n    return this.flow(name);\n  }\n\n  // add a flows map\n  // { a: flowAFn, b: flowBFn}\n  addFlows(flowMap={}, context=\"\") {\n    const flows = {};\n\n    Object.keys(flowMap).forEach(key => {\n      const name = context ? `${context}.${key}` : key;\n      flows[name] = this.addFlow(flowMap[key], name);\n    });\n\n    return flows;\n  }\n\n  // add source as flow to flowGroup\n  addSource(source, name=\"Anonymous\", operatorType=\"concatMap\") {\n    let operator = {\n      'concatMap': concatMapSource,\n      'mergeMap': mergeMapSource,\n      'switchMap': switchMapSource\n    }[operatorType];\n\n    if (!operator) {\n      throw new Error(`gent-data error ~ operatorType must in ['concatMap', 'mergeMap', 'switchMap'], but get <${operatorType}> when addSource <${name}>.`)\n    }\n\n    return this.addFlow(operator(source), name);\n  }\n\n  // add sources as flow to flowGroup\n  addSources(sourceMap, context=\"\", operatorType=\"concatMap\") {\n    const flows = {};\n\n    Object.keys(sourceMap).forEach(key => {\n      const name = context ? `${context}.${key}` : key;\n      flows[name] = this.addSource(sourceMap[key], name, operatorType);\n    });\n\n    return flows;\n  }\n\n  // set before middlewares\n  setBeforeMiddlewares(middlewares=[]) {\n    this._beforeMiddlewares = middlewares;\n  }\n\n  // set after middlewares\n  setAfterMiddlewares(middlewares=[]) {\n    this._afterMiddlewares = middlewares;\n  }\n\n  // get flow\n  flow(name) {\n    const self = this;\n\n    invariant(\n      typeof this._flows[name] === 'function',\n      `gent-data error ~ flow<${name}> can't be found in this group<${this._name}>!`\n    );\n\n    const flowFn = this._flows[name];\n\n    // add middleware opts\n    const beforeMiddlewares = this._beforeMiddlewares.map(middleware => {\n      return (input, opts={}) => {\n        return middleware(input, { middleware: 'before', ...opts });\n      }\n    });\n\n    // add middleware opts\n    const afterMiddlewares = this._afterMiddlewares.map(middleware => {\n      return (input, opts={}) => {\n        return middleware(input, { middleware: 'after', ...opts });\n      }\n    });;\n\n    // concat middlewares with flow\n    const fns = beforeMiddlewares.concat(flowFn).concat(afterMiddlewares);\n\n    // generate flow\n    const flow = function flow(input) {\n      const opts = {\n        groupName: self._name,\n        flowName: name\n      };\n      return fns.reduce((prev, currFn) => currFn(prev, opts), input);\n    }\n\n    return flow;\n  }\n}"],"names":["invariant","condition","message","Error","log","process","env","NODE_ENV","catchError","fn","bind","e","logMiddleware","input","opts","groupName","flowName","middleware","typeMsg","before","after","pipe","map","logData","JSON","parse","stringify","value","observePromise","promise","observer","then","data","next","complete","error","observeValue","sourceToObservable","res","Observable","create","concatMapSource","source","concatMap","mergeMapSource","mergeMap","switchMapSource","switchMap","FlowGroup","name","beforeMiddlewares","afterMiddlewares","_name","_beforeMiddlewares","_afterMiddlewares","_flows","flow","flowMap","context","flows","keys","forEach","key","addFlow","operatorType","operator","sourceMap","addSource","middlewares","self","flowFn","fns","concat","reduce","prev","currFn"],"mappings":"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"}